import{c as n,W as c,D as y,I as m}from"./tsparticles-engine-DLgpyJd2.js";function p(e,a,o,i){switch(e.options.opacity.animation.destroy){case"max":a>=i&&e.destroy();break;case"min":a<=o&&e.destroy();break}}function d(e,a){const o=e.opacity;if(e.destroyed||!(o!=null&&o.enable)||(o.maxLoops??0)>0&&(o.loops??0)>(o.maxLoops??0))return;const i=o.min,t=o.max,s=o.decay??1;if(o.time||(o.time=0),(o.delayTime??0)>0&&o.time<(o.delayTime??0)&&(o.time+=a.value),!((o.delayTime??0)>0&&o.time<(o.delayTime??0))){switch(o.status){case"increasing":o.value>=t?(o.status="decreasing",o.loops||(o.loops=0),o.loops++):o.value+=(o.velocity??0)*a.factor;break;case"decreasing":o.value<=i?(o.status="increasing",o.loops||(o.loops=0),o.loops++):o.value-=(o.velocity??0)*a.factor;break}o.velocity&&o.decay!==1&&(o.velocity*=s),p(e,o.value,i,t),e.destroyed||(o.value=n(o.value,i,t))}}class u{constructor(a){this.container=a}init(a){const o=a.options.opacity;a.opacity=c(o,1);const i=o.animation;i.enable&&(a.opacity.velocity=y(i.speed)/100*this.container.retina.reduceFactor,i.sync||(a.opacity.velocity*=m()))}isEnabled(a){return!a.destroyed&&!a.spawning&&!!a.opacity&&a.opacity.enable&&((a.opacity.maxLoops??0)<=0||(a.opacity.maxLoops??0)>0&&(a.opacity.loops??0)<(a.opacity.maxLoops??0))}reset(a){a.opacity&&(a.opacity.time=0,a.opacity.loops=0)}update(a,o){this.isEnabled(a)&&d(a,o)}}async function l(e,a=!0){await e.addParticleUpdater("opacity",o=>new u(o),a)}export{l};
