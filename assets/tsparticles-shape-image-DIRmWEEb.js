import{M as _,N as D,x as O}from"./tsparticles-engine-DLgpyJd2.js";const L=[0,4,2,1],R=[8,8,4,2];class A{constructor(e){this.pos=0,this.data=new Uint8ClampedArray(e)}getString(e){const o=this.data.slice(this.pos,this.pos+e);return this.pos+=o.length,o.reduce((s,r)=>s+String.fromCharCode(r),"")}nextByte(){return this.data[this.pos++]}nextTwoBytes(){return this.pos+=2,this.data[this.pos-2]+(this.data[this.pos-1]<<8)}readSubBlocks(){let e="",o=0;do{o=this.data[this.pos++];for(let s=o;--s>=0;e+=String.fromCharCode(this.data[this.pos++]));}while(o!==0);return e}readSubBlocksBin(){let e=0,o=0;for(let r=0;(e=this.data[this.pos+r])!==0;r+=e+1)o+=e;const s=new Uint8Array(o);for(let r=0;(e=this.data[this.pos++])!==0;)for(let n=e;--n>=0;s[r++]=this.data[this.pos++]);return s}skipSubBlocks(){for(;this.data[this.pos]!==0;this.pos+=this.data[this.pos]+1);this.pos++}}function P(t,e){const o=[];for(let s=0;s<e;s++)o.push({r:t.data[t.pos],g:t.data[t.pos+1],b:t.data[t.pos+2]}),t.pos+=3;return o}async function U(t,e,o,s){switch(t.nextByte()){case 249:{const r=e.frames[o(!1)];t.pos++;const n=t.nextByte();r.GCreserved=(n&224)>>>5,r.disposalMethod=(n&28)>>>2,r.userInputDelayFlag=(n&2)===2;const a=(n&1)===1;r.delayTime=t.nextTwoBytes()*10;const d=t.nextByte();a&&s(d),t.pos++;break}case 255:{t.pos++;const r={identifier:t.getString(8),authenticationCode:t.getString(3),data:t.readSubBlocksBin()};e.applicationExtensions.push(r);break}case 254:{e.comments.push([o(!1),t.readSubBlocks()]);break}case 1:{if(e.globalColorTable.length===0)throw new EvalError("plain text extension without global color table");t.pos++,e.frames[o(!1)].plainTextData={left:t.nextTwoBytes(),top:t.nextTwoBytes(),width:t.nextTwoBytes(),height:t.nextTwoBytes(),charSize:{width:t.nextTwoBytes(),height:t.nextTwoBytes()},foregroundColor:t.nextByte(),backgroundColor:t.nextByte(),text:t.readSubBlocks()};break}default:t.skipSubBlocks();break}}async function G(t,e,o,s,r,n){const a=e.frames[s(!0)];a.left=t.nextTwoBytes(),a.top=t.nextTwoBytes(),a.width=t.nextTwoBytes(),a.height=t.nextTwoBytes();const d=t.nextByte(),l=(d&128)===128,h=(d&64)===64;a.sortFlag=(d&32)===32,a.reserved=(d&24)>>>3;const p=1<<(d&7)+1;l&&(a.localColorTable=P(t,p));const f=g=>{const{r:u,g:w,b:i}=(l?a.localColorTable:e.globalColorTable)[g];return{r:u,g:w,b:i,a:g===r(null)?o?~~((u+w+i)/3):0:255}},c=(()=>{try{return new ImageData(a.width,a.height,{colorSpace:"srgb"})}catch(g){if(g instanceof DOMException&&g.name==="IndexSizeError")return null;throw g}})();if(c==null)throw new EvalError("GIF frame size is to large");const I=t.nextByte(),T=t.readSubBlocksBin(),x=1<<I,B=(g,u)=>{const w=g>>>3,i=g&7;return(T[w]+(T[w+1]<<8)+(T[w+2]<<16)&(1<<u)-1<<i)>>>i};if(h){for(let g=0,u=I+1,w=0,i=[[0]],b=0;b<4;b++)if(L[b]<a.height)for(let y=0,m=0;;){const k=g;if(g=B(w,u),w+=u+1,g===x){u=I+1,i.length=x+2;for(let C=0;C<i.length;C++)i[C]=C<x?[C]:[]}else{g>=i.length?i.push(i[k].concat(i[k][0])):k!==x&&i.push(i[k].concat(i[g][0]));for(let C=0;C<i[g].length;C++){const{r:v,g:F,b:$,a:z}=f(i[g][C]);c.data.set([v,F,$,z],L[b]*a.width+R[b]*m+y%(a.width*4)),y+=4}i.length===1<<u&&u<12&&u++}if(y===a.width*4*(m+1)&&(m++,L[b]+R[b]*m>=a.height))break}a.image=c,a.bitmap=await createImageBitmap(c)}else{for(let g=0,u=I+1,w=0,i=[[0]],b=-4;;){const y=g;if(g=B(w,u),w+=u,g===x){u=I+1,i.length=x+2;for(let m=0;m<i.length;m++)i[m]=m<x?[m]:[]}else{if(g===x+1)break;g>=i.length?i.push(i[y].concat(i[y][0])):y!==x&&i.push(i[y].concat(i[g][0]));for(let m=0;m<i[g].length;m++){const{r:k,g:C,b:v,a:F}=f(i[g][m]);c.data.set([k,C,v,F],b+=4)}i.length>=1<<u&&u<12&&u++}}a.image=c,a.bitmap=await createImageBitmap(c)}}async function M(t,e,o,s,r,n){switch(t.nextByte()){case 59:return!0;case 44:await G(t,e,o,s,r);break;case 33:await U(t,e,s,r);break;default:throw new EvalError("undefined block found")}return!1}function N(t){for(const e of t.applicationExtensions)if(e.identifier+e.authenticationCode==="NETSCAPE2.0")return e.data[1]+(e.data[2]<<8);return NaN}async function j(t,e,o){o||(o=!1);const s=await fetch(t);if(!s.ok&&s.status===404)throw new EvalError("file not found");const r=await s.arrayBuffer(),n={width:0,height:0,totalTime:0,colorRes:0,pixelAspectRatio:0,frames:[],sortFlag:!1,globalColorTable:[],backgroundImage:new ImageData(1,1,{colorSpace:"srgb"}),comments:[],applicationExtensions:[]},a=new A(new Uint8ClampedArray(r));if(a.getString(6)!=="GIF89a")throw new Error("not a supported GIF file");n.width=a.nextTwoBytes(),n.height=a.nextTwoBytes();const d=a.nextByte(),l=(d&128)===128;n.colorRes=(d&112)>>>4,n.sortFlag=(d&8)===8;const h=1<<(d&7)+1,p=a.nextByte();n.pixelAspectRatio=a.nextByte(),n.pixelAspectRatio!==0&&(n.pixelAspectRatio=(n.pixelAspectRatio+15)/64),l&&(n.globalColorTable=P(a,h));const f=(()=>{try{return new ImageData(n.width,n.height,{colorSpace:"srgb"})}catch(i){if(i instanceof DOMException&&i.name==="IndexSizeError")return null;throw i}})();if(f==null)throw new Error("GIF frame size is to large");const{r:c,g:I,b:T}=n.globalColorTable[p];f.data.set(l?[c,I,T,255]:[0,0,0,0]);for(let i=4;i<f.data.length;i*=2)f.data.copyWithin(i,0,i);n.backgroundImage=f;let x=-1,B=!0,g=-1;const u=i=>(i&&(B=!0),x),w=i=>(i!=null&&(g=i),g);try{do B&&(n.frames.push({left:0,top:0,width:0,height:0,disposalMethod:0,image:new ImageData(1,1,{colorSpace:"srgb"}),plainTextData:null,userInputDelayFlag:!1,delayTime:0,sortFlag:!1,localColorTable:[],reserved:0,GCreserved:0}),x++,g=-1,B=!1);while(!await M(a,n,o,u,w,e));n.frames.length--;for(const i of n.frames){if(i.userInputDelayFlag&&i.delayTime===0){n.totalTime=1/0;break}n.totalTime+=i.delayTime}return n}catch(i){throw i instanceof EvalError?new Error(`error while parsing frame ${x} "${i.message}"`):i}}const H=/(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\((-?\d+%?[,\s]+){2,3}\s*[\d.]+%?\))|currentcolor/gi;function Q(t,e,o){const{svgData:s}=t;if(!s)return"";const r=O(e,o);if(s.includes("fill"))return s.replace(H,()=>r);const n=s.indexOf(">");return`${s.substring(0,n)} fill="${r}"${s.substring(n)}`}async function E(t){return new Promise(e=>{t.loading=!0;const o=new Image;t.element=o,o.addEventListener("load",()=>{t.loading=!1,e()}),o.addEventListener("error",()=>{t.element=void 0,t.error=!0,t.loading=!1,_().error(`${D} loading image: ${t.source}`),e()}),o.src=t.source})}async function S(t){if(t.type!=="gif"){await E(t);return}t.loading=!0;try{t.gifData=await j(t.source),t.gifLoopCount=N(t.gifData)??0,t.gifLoopCount===0&&(t.gifLoopCount=1/0)}catch{t.error=!0}t.loading=!1}async function W(t){if(t.type!=="svg"){await E(t);return}t.loading=!0;const e=await fetch(t.source);e.ok?t.svgData=await e.text():(_().error(`${D} Image not found`),t.error=!0),t.loading=!1}function q(t,e,o,s){var a;const r=Q(t,o,((a=s.opacity)==null?void 0:a.value)??1),n={color:o,gif:e.gif,data:{...t,svgData:r},loaded:!1,ratio:e.width/e.height,replaceColor:e.replaceColor??e.replace_color,source:e.src};return new Promise(d=>{const l=new Blob([r],{type:"image/svg+xml"}),h=URL||window.URL||window.webkitURL||window,p=h.createObjectURL(l),f=new Image;f.addEventListener("load",()=>{n.loaded=!0,n.element=f,d(n),h.revokeObjectURL(p)}),f.addEventListener("error",async()=>{h.revokeObjectURL(p);const c={...t,error:!1,loading:!0};await E(c),n.loaded=!0,n.element=c.element,d(n)}),f.src=p})}class J{constructor(e){this.loadImageShape=async o=>{if(!this._engine.loadImage)throw new Error(`${D} image shape not initialized`);await this._engine.loadImage({gif:o.gif,name:o.name,replaceColor:o.replaceColor??o.replace_color??!1,src:o.src})},this._engine=e}addImage(e){this._engine.images||(this._engine.images=[]),this._engine.images.push(e)}draw(e,o,s,r,n){const a=o.image,d=a==null?void 0:a.element;if(a){if(e.globalAlpha=r,a.gif&&a.gifData){const l=new OffscreenCanvas(a.gifData.width,a.gifData.height),h=l.getContext("2d");if(!h)throw new Error("could not create offscreen canvas context");h.imageSmoothingQuality="low",h.imageSmoothingEnabled=!1,h.clearRect(0,0,l.width,l.height),o.gifLoopCount===void 0&&(o.gifLoopCount=a.gifLoopCount??0);let p=o.gifFrame??0;const f={x:-a.gifData.width*.5,y:-a.gifData.height*.5},c=a.gifData.frames[p];if(o.gifTime===void 0&&(o.gifTime=0),!c.bitmap)return;switch(e.scale(s/a.gifData.width,s/a.gifData.height),c.disposalMethod){case 4:case 5:case 6:case 7:case 0:h.drawImage(c.bitmap,c.left,c.top),e.drawImage(l,f.x,f.y),h.clearRect(0,0,l.width,l.height);break;case 1:h.drawImage(c.bitmap,c.left,c.top),e.drawImage(l,f.x,f.y);break;case 2:h.drawImage(c.bitmap,c.left,c.top),e.drawImage(l,f.x,f.y),h.clearRect(0,0,l.width,l.height),a.gifData.globalColorTable.length===0?h.putImageData(a.gifData.frames[0].image,f.x+c.left,f.y+c.top):h.putImageData(a.gifData.backgroundImage,f.x,f.y);break;case 3:{const I=h.getImageData(0,0,l.width,l.height);h.drawImage(c.bitmap,c.left,c.top),e.drawImage(l,f.x,f.y),h.clearRect(0,0,l.width,l.height),h.putImageData(I,0,0)}break}if(o.gifTime+=n.value,o.gifTime>c.delayTime){if(o.gifTime-=c.delayTime,++p>=a.gifData.frames.length){if(--o.gifLoopCount<=0)return;p=0,h.clearRect(0,0,l.width,l.height)}o.gifFrame=p}e.scale(a.gifData.width/s,a.gifData.height/s)}else if(d){const l=a.ratio,h={x:-s,y:-s};e.drawImage(d,h.x,h.y,s*2,s*2/l)}e.globalAlpha=1}}getSidesCount(){return 12}async init(e){const o=e.actualOptions;if(!(!o.preload||!this._engine.loadImage))for(const s of o.preload)await this._engine.loadImage(s)}loadShape(e){if(e.shape!=="image"&&e.shape!=="images")return;this._engine.images||(this._engine.images=[]);const o=e.shapeData;this._engine.images.find(r=>r.name===o.name||r.source===o.src)||this.loadImageShape(o).then(()=>{this.loadShape(e)})}particleInit(e,o){if(o.shape!=="image"&&o.shape!=="images")return;this._engine.images||(this._engine.images=[]);const s=this._engine.images,r=o.shapeData,n=o.getFillColor(),a=s.find(l=>l.name===r.name||l.source===r.src);if(!a)return;const d=r.replaceColor??r.replace_color??a.replaceColor;if(a.loading){setTimeout(()=>{this.particleInit(e,o)});return}(async()=>{let l;a.svgData&&n?l=await q(a,r,n,o):l={color:n,data:a,element:a.element,gif:a.gif,gifData:a.gifData,gifLoopCount:a.gifLoopCount,loaded:!0,ratio:r.width&&r.height?r.width/r.height:a.ratio??1,replaceColor:d,source:r.src},l.ratio||(l.ratio=1);const h=r.fill??o.fill,p=r.close??o.close,f={image:l,fill:h,close:p};o.image=f.image,o.fill=f.fill,o.close=f.close})()}}class K{constructor(){this.src="",this.gif=!1}load(e){e&&(e.gif!==void 0&&(this.gif=e.gif),e.height!==void 0&&(this.height=e.height),e.name!==void 0&&(this.name=e.name),e.replaceColor!==void 0&&(this.replaceColor=e.replaceColor),e.src!==void 0&&(this.src=e.src),e.width!==void 0&&(this.width=e.width))}}class X{constructor(e){this.id="imagePreloader",this._engine=e}getPlugin(){return{}}loadOptions(e,o){if(!o||!o.preload)return;e.preload||(e.preload=[]);const s=e.preload;for(const r of o.preload){const n=s.find(a=>a.name===r.name||a.src===r.src);if(n)n.load(r);else{const a=new K;a.load(r),s.push(a)}}}needsPlugin(){return!0}}function Y(t){t.loadImage||(t.loadImage=async e=>{if(!e.name&&!e.src)throw new Error(`${D} no image source provided`);if(t.images||(t.images=[]),!t.images.find(o=>o.name===e.name||o.source===e.src))try{const o={gif:e.gif??!1,name:e.name??e.src,source:e.src,type:e.src.substring(e.src.length-3),error:!1,loading:!0,replaceColor:e.replaceColor,ratio:e.width&&e.height?e.width/e.height:void 0};t.images.push(o),await(e.gif?S:e.replaceColor?W:E)(o)}catch{throw new Error(`${D} ${e.name??e.src} not found`)}})}async function V(t,e=!0){Y(t);const o=new X(t);await t.addPlugin(o,e),await t.addShape(["image","images"],new J(t),e)}export{V as l};
