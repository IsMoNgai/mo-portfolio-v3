import{p as d,i as g,k as m,Q as w}from"./tsparticles-engine-DLgpyJd2.js";const o=["text","character","char"];class D{draw(a,e,n,s){const t=e.shapeData;if(t===void 0)return;const f=t.value;if(f===void 0)return;e.text===void 0&&(e.text=d(f,e.randomIndexData));const r=e.text,u=t.style??"",h=t.weight??"400",p=Math.round(n)*2,x=t.font??"Verdana",c=e.fill,y=r.length*n/2;a.font=`${u} ${h} ${p}px "${x}"`;const i={x:-y,y:n/2};a.globalAlpha=s,c?a.fillText(r,i.x,i.y):a.strokeText(r,i.x,i.y),a.globalAlpha=1}getSidesCount(){return 12}async init(a){const e=a.actualOptions;if(o.find(n=>g(n,e.particles.shape.type))){const n=o.map(t=>e.particles.shape.options[t]).find(t=>!!t),s=[];m(n,t=>{s.push(w(t.font,t.weight))}),await Promise.all(s)}}particleInit(a,e){if(!e.shape||!o.includes(e.shape))return;const n=e.shapeData;if(n===void 0)return;const s=n.value;s!==void 0&&(e.text=d(s,e.randomIndexData))}}async function S(l,a=!0){await l.addShape(o,new D,a)}export{S as l};
